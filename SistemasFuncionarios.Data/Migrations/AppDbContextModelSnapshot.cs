// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SistemasFuncionarios.Data.Context;

#nullable disable

namespace SistemasFuncionarios.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SistemasFuncionarios.Domain.Entities.Cnh", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)")
                        .HasColumnName("categoria");

                    b.Property<DateTime>("DtAtualizacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("dtatualizacao")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime>("DtCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("dtcriacao")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime>("DtValidade")
                        .HasColumnType("date")
                        .HasColumnName("dtvalidade");

                    b.Property<int>("FuncionarioId")
                        .HasColumnType("integer")
                        .HasColumnName("funcionario_id");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)")
                        .HasColumnName("numero");

                    b.Property<string>("UfEmissao")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)")
                        .HasColumnName("uf_emissao");

                    b.HasKey("Id");

                    b.HasIndex("FuncionarioId")
                        .IsUnique();

                    b.HasIndex("Numero")
                        .IsUnique();

                    b.ToTable("cnh", (string)null);
                });

            modelBuilder.Entity("SistemasFuncionarios.Domain.Entities.Ctps", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DtAtualizacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("dtatualizacao")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime>("DtCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("dtcriacao")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime>("DtEmissao")
                        .HasColumnType("date")
                        .HasColumnName("dtemissao");

                    b.Property<int>("FuncionarioId")
                        .HasColumnType("integer")
                        .HasColumnName("funcionario_id");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("numero");

                    b.Property<string>("Serie")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("serie");

                    b.Property<string>("UfEmissao")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)")
                        .HasColumnName("uf_emissao");

                    b.HasKey("Id");

                    b.HasIndex("FuncionarioId")
                        .IsUnique();

                    b.ToTable("ctps", (string)null);
                });

            modelBuilder.Entity("SistemasFuncionarios.Domain.Entities.Curso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("ativo");

                    b.Property<int?>("CargaHoraria")
                        .HasColumnType("integer")
                        .HasColumnName("carga_horaria");

                    b.Property<string>("Descricao")
                        .HasMaxLength(500)
                        .HasColumnType("text")
                        .HasColumnName("descricao");

                    b.Property<DateTime>("DtAtualizacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("dtatualizacao")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime>("DtCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("dtcriacao")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Instituicao")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasColumnName("instituicao");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.ToTable("cursos", (string)null);
                });

            modelBuilder.Entity("SistemasFuncionarios.Domain.Entities.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("ativo");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("bairro");

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("character varying(8)")
                        .HasColumnName("cep");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("cidade");

                    b.Property<string>("Complemento")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("complemento");

                    b.Property<DateTime>("DtAtualizacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("dtatualizacao")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime>("DtCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("dtcriacao")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("FuncionarioId")
                        .HasColumnType("integer")
                        .HasColumnName("funcionario_id");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("logradouro");

                    b.Property<string>("Numero")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("numero");

                    b.Property<bool>("Principal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("principal");

                    b.Property<string>("TpEndereco")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasDefaultValue("RESIDENCIAL")
                        .HasColumnName("tp_endereco");

                    b.Property<string>("UF")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)")
                        .HasColumnName("uf");

                    b.HasKey("Id");

                    b.HasIndex("FuncionarioId");

                    b.ToTable("enderecos", (string)null);
                });

            modelBuilder.Entity("SistemasFuncionarios.Domain.Entities.Funcionario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("ativo");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)")
                        .HasColumnName("cpf");

                    b.Property<string>("Celular")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)")
                        .HasColumnName("celular");

                    b.Property<DateTime>("DtAtualizacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("dtatualizacao")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime>("DtCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("dtcriacao")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime>("DtNasc")
                        .HasColumnType("date")
                        .HasColumnName("dtnasc");

                    b.Property<string>("Email")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasColumnName("email");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasColumnName("nome");

                    b.Property<int>("ProfissaoId")
                        .HasColumnType("integer")
                        .HasColumnName("profissao_id");

                    b.Property<string>("RG")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)")
                        .HasColumnName("rg");

                    b.Property<string>("Telefone")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)")
                        .HasColumnName("telefone");

                    b.HasKey("Id");

                    b.HasIndex("CPF")
                        .IsUnique();

                    b.HasIndex("ProfissaoId");

                    b.ToTable("funcionarios", (string)null);
                });

            modelBuilder.Entity("SistemasFuncionarios.Domain.Entities.FuncionarioCurso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CertificadoNumero")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("certificado_numero");

                    b.Property<int>("CursoId")
                        .HasColumnType("integer")
                        .HasColumnName("curso_id");

                    b.Property<DateTime>("DtAtualizacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("dtatualizacao")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime?>("DtConclusao")
                        .HasColumnType("date")
                        .HasColumnName("dtconclusao");

                    b.Property<DateTime>("DtCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("dtcriacao")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("FuncionarioId")
                        .HasColumnType("integer")
                        .HasColumnName("funcionario_id");

                    b.Property<string>("Observacoes")
                        .HasMaxLength(500)
                        .HasColumnType("text")
                        .HasColumnName("observacoes");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.HasIndex("FuncionarioId", "CursoId")
                        .IsUnique();

                    b.ToTable("funcionario_cursos", (string)null);
                });

            modelBuilder.Entity("SistemasFuncionarios.Domain.Entities.Profissao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("ativo");

                    b.Property<string>("Descricao")
                        .HasMaxLength(500)
                        .HasColumnType("text")
                        .HasColumnName("descricao");

                    b.Property<DateTime>("DtAtualizacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("dtatualizacao")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime>("DtCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("dtcriacao")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.ToTable("profissoes", (string)null);
                });

            modelBuilder.Entity("SistemasFuncionarios.Domain.Entities.Cnh", b =>
                {
                    b.HasOne("SistemasFuncionarios.Domain.Entities.Funcionario", "Funcionario")
                        .WithOne("Cnh")
                        .HasForeignKey("SistemasFuncionarios.Domain.Entities.Cnh", "FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Funcionario");
                });

            modelBuilder.Entity("SistemasFuncionarios.Domain.Entities.Ctps", b =>
                {
                    b.HasOne("SistemasFuncionarios.Domain.Entities.Funcionario", "Funcionario")
                        .WithOne("Ctps")
                        .HasForeignKey("SistemasFuncionarios.Domain.Entities.Ctps", "FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Funcionario");
                });

            modelBuilder.Entity("SistemasFuncionarios.Domain.Entities.Endereco", b =>
                {
                    b.HasOne("SistemasFuncionarios.Domain.Entities.Funcionario", "Funcionario")
                        .WithMany("Enderecos")
                        .HasForeignKey("FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Funcionario");
                });

            modelBuilder.Entity("SistemasFuncionarios.Domain.Entities.Funcionario", b =>
                {
                    b.HasOne("SistemasFuncionarios.Domain.Entities.Profissao", "Profissao")
                        .WithMany("Funcionarios")
                        .HasForeignKey("ProfissaoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Profissao");
                });

            modelBuilder.Entity("SistemasFuncionarios.Domain.Entities.FuncionarioCurso", b =>
                {
                    b.HasOne("SistemasFuncionarios.Domain.Entities.Curso", "Curso")
                        .WithMany("FuncionarioCursos")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SistemasFuncionarios.Domain.Entities.Funcionario", "Funcionario")
                        .WithMany("FuncionarioCurso")
                        .HasForeignKey("FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");

                    b.Navigation("Funcionario");
                });

            modelBuilder.Entity("SistemasFuncionarios.Domain.Entities.Curso", b =>
                {
                    b.Navigation("FuncionarioCursos");
                });

            modelBuilder.Entity("SistemasFuncionarios.Domain.Entities.Funcionario", b =>
                {
                    b.Navigation("Cnh");

                    b.Navigation("Ctps");

                    b.Navigation("Enderecos");

                    b.Navigation("FuncionarioCurso");
                });

            modelBuilder.Entity("SistemasFuncionarios.Domain.Entities.Profissao", b =>
                {
                    b.Navigation("Funcionarios");
                });
#pragma warning restore 612, 618
        }
    }
}
